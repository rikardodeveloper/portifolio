{"version":3,"file":"webacad-ng-mat-file-upload.js.map","sources":["ng://@webacad/ng-mat-file-upload/upload-file.ts","ng://@webacad/ng-mat-file-upload/mat-file-upload.component.ts","ng://@webacad/ng-mat-file-upload/mat-file-upload.module.ts","ng://@webacad/ng-mat-file-upload/validators.ts"],"sourcesContent":["import {readFileAsDataURL} from '@webacad/observable-file-reader';\nimport {Observable} from 'rxjs';\n\n\nconst imageMimeTypes: Array<string> = [\n\t'image/gif', 'image/png', 'image/jpeg',\n];\n\n\nexport class UploadFile\n{\n\n\n\tpublic icon: string = 'cloud_upload';\n\n\tprivate imageSource: Observable<string>|undefined;\n\n\n\tconstructor(\n\t\tpublic readonly file: File,\n\t\tprivate _progress: number = 0,\n\t) {}\n\n\n\tget progress(): number\n\t{\n\t\treturn this._progress;\n\t}\n\n\tset progress(progress: number)\n\t{\n\t\tthis._progress = progress;\n\t}\n\n\n\tpublic supportsImagePreview(): boolean\n\t{\n\t\treturn imageMimeTypes.indexOf(this.file.type) >= 0;\n\t}\n\n\n\tpublic getImageSource(): Observable<string>\n\t{\n\t\tif (typeof this.imageSource !== 'undefined') {\n\t\t\treturn this.imageSource;\n\t\t}\n\n\t\treturn this.imageSource = readFileAsDataURL(this.file);\n\t}\n\n\n\tpublic increaseProgress(add: number): void\n\t{\n\t\tthis.progress += add;\n\t}\n\n}\n","import {Component, Input, Optional, Self, OnInit, OnDestroy, ViewChild, ElementRef} from '@angular/core';\nimport {ControlValueAccessor, NgForm, FormGroupDirective, NgControl} from '@angular/forms';\nimport {ErrorStateMatcher, CanUpdateErrorState, mixinErrorState} from '@angular/material/core';\nimport {MatFormFieldControl} from '@angular/material/form-field';\n\nimport {UploadFile} from './upload-file';\n\n\nlet nextUniqueId: number = 0;\n\n\nexport class BaseMatFileUploadComponent\n{\n\n\n\tconstructor(\n\t\tpublic _defaultErrorStateMatcher: ErrorStateMatcher,\n\t\tpublic _parentForm: NgForm,\n\t\tpublic _parentFormGroup: FormGroupDirective,\n\t\tpublic ngControl: NgControl,\n\t) {}\n\n}\n\n\nexport const _BaseMatFileUploadComponentMixin = mixinErrorState(BaseMatFileUploadComponent);\n\n\n@Component({\n\texportAs: 'waMatFileUpload',\n\tselector: 'wa-mat-file-upload',\n\ttemplateUrl: './mat-file-upload.component.html',\n\tproviders: [\n\t\t{\n\t\t\tprovide: MatFormFieldControl,\n\t\t\tuseExisting: MatFileUploadComponent,\n\t\t},\n\t],\n})\nexport class MatFileUploadComponent extends _BaseMatFileUploadComponentMixin implements\n\tOnInit,\n\tOnDestroy,\n\tControlValueAccessor,\n\tMatFormFieldControl<Array<File>>\n{\n\n\n\t@Input()\n\tpublic placeholder: string;\n\n\t@Input()\n\tpublic required: boolean = false;\n\n\t@Input()\n\tpublic multiple: boolean = false;\n\n\t@Input()\n\tpublic color: string|undefined;\n\n\t@Input()\n\tpublic preview: boolean = false;\n\n\t@Input()\n\tpublic previewPosition: 'top' | 'bottom' = 'bottom';\n\n\t@Input()\n\tpublic dense: boolean = false;\n\n\t@Input()\n\tpublic selectedText: (files: Array<UploadFile>) => string = defaultSelectedText;\n\n\t@ViewChild('fileUpload')\n\tpublic fileUpload: ElementRef;\n\n\tpublic visibleValue: string = '';\n\n\tpublic shouldLabelFloat: boolean = true;\n\n\tprivate _value: Array<File>;\n\n\tprivate _files: Array<UploadFile> = [];\n\n\tprivate _disabled: boolean;\n\n\tprivate _id: string;\n\n\tprivate _uid: string = `wa-mat-file-upload-${nextUniqueId++}`;\n\n\n\tconstructor(\n\t\tdefaultErrorStateMatcher: ErrorStateMatcher,\n\t\t@Optional() parentForm: NgForm,\n\t\t@Optional() parentFormGroup: FormGroupDirective,\n\t\t@Self() @Optional() public readonly ngControl: NgControl,\n\t) {\n\t\tsuper(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n\t\tif (this.ngControl !== null) {\n\t\t\tthis.ngControl.valueAccessor = this;\n\t\t}\n\t}\n\n\n\t@Input()\n\tget value(): Array<File>\n\t{\n\t\treturn this._value;\n\t}\n\n\tset value(value: Array<File>) {}\n\n\n\t@Input()\n\tget disabled(): boolean\n\t{\n\t\tif (typeof this._disabled !== 'undefined') {\n\t\t\treturn this._disabled;\n\t\t}\n\n\t\tif (this.ngControl && this.ngControl.disabled !== null) {\n\t\t\treturn this.ngControl.disabled;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tset disabled(disabled: boolean)\n\t{\n\t\tthis._disabled = disabled;\n\t}\n\n\n\t@Input()\n\tget id(): string\n\t{\n\t\treturn this._id;\n\t}\n\n\tset id(id: string)\n\t{\n\t\tthis._id = id || this._uid;\n\t}\n\n\n\tget files(): Array<UploadFile>\n\t{\n\t\treturn this._files;\n\t}\n\n\n\tget empty(): boolean\n\t{\n\t\treturn typeof this._value === 'undefined';\n\t}\n\n\n\tget focused(): boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tpublic openDialog(): void\n\t{\n\t\tif (this.fileUpload) {\n\t\t\tthis.fileUpload.nativeElement.click();\n\t\t}\n\t}\n\n\n\tpublic clearFiles(): void\n\t{\n\t\tthis._value = [];\n\t\tthis._files = [];\n\t\tthis.recalculate();\n\t}\n\n\n\tpublic removeFile(file: UploadFile): void\n\t{\n\t\tthis._value.splice(this._value.indexOf(file.file), 1);\n\t\tthis._files.splice(this._files.indexOf(file), 1);\n\t\tthis.recalculate();\n\t}\n\n\n\tpublic ngOnInit(): void\n\t{\n\t\tthis.visibleValue = this.selectedText(this._files);\n\t}\n\n\n\tpublic ngOnDestroy(): void\n\t{\n\t\tthis.stateChanges.complete();\n\t}\n\n\n\tpublic onTouched = () => {};\n\n\n\tpublic onChange(files: FileList): void\n\t{\n\t\tthis._value = [];\n\t\tthis._files = [];\n\n\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\tthis._value.push(files[i]);\n\t\t\tthis._files.push(new UploadFile(files[i]));\n\t\t}\n\n\t\tthis.recalculate();\n\t}\n\n\n\tpublic writeValue(value: any): void {}\n\n\n\tpublic registerOnChange(fn: (_: any) => void): void\n\t{\n\t\tthis._onChange = fn;\n\t}\n\n\n\tpublic registerOnTouched(fn: () => void): void\n\t{\n\t\tthis.onTouched = fn;\n\t}\n\n\n\tpublic setDisabledState(isDisabled: boolean): void\n\t{\n\t\tthis.disabled = isDisabled;\n\t}\n\n\n\tpublic onContainerClick(): void {}\n\n\n\tpublic focus(): void {}\n\n\n\tpublic setDescribedByIds(): void {}\n\n\n\tprivate _onChange = (_: any) => {};\n\n\n\tprivate recalculate(): void\n\t{\n\t\tthis.fileUpload.nativeElement.value = '';\n\t\tthis.visibleValue = this.selectedText(this._files);\n\n\t\tthis._onChange(this._value);\n\t\tthis.onTouched();\n\t\tthis.updateErrorState();\n\t}\n\n}\n\n\nfunction defaultSelectedText(files: Array<UploadFile>): string\n{\n\tif (files.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (files.length === 1) {\n\t\treturn files[0].file.name;\n\t}\n\n\treturn files.length + ' Files selected';\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatIconModule} from '@angular/material/icon';\n\nimport {MatFileUploadComponent} from './mat-file-upload.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tMatButtonModule, MatDividerModule, MatListModule, MatProgressBarModule, MatIconModule,\n\t],\n\tdeclarations: [\n\t\tMatFileUploadComponent,\n\t],\n\texports: [\n\t\tMatFileUploadComponent,\n\t],\n\tproviders: [\n\t\tErrorStateMatcher,\n\t],\n})\nexport class MatFileUploadModule {}\n","import {AbstractControl, ValidationErrors, ValidatorFn} from '@angular/forms';\n\n\nexport function fileMaxSize(maxSize: number): ValidatorFn\n{\n\treturn fileValidation((file) => file.size > maxSize, (errors) => {\n\t\treturn {\n\t\t\tfileMaxSize: {\n\t\t\t\tmaxSize: maxSize,\n\t\t\t\tinvalidFiles: errors,\n\t\t\t},\n\t\t};\n\t});\n}\n\n\nexport function fileType(allowedTypes: Array<string>): ValidatorFn\n{\n\treturn fileValidation((file) => allowedTypes.indexOf(file.type) < 0, (errors) => {\n\t\treturn {\n\t\t\tfileType: {\n\t\t\t\tallowedTypes: allowedTypes,\n\t\t\t\tinvalidFiles: errors,\n\t\t\t},\n\t\t};\n\t});\n}\n\n\nfunction fileValidation(validator: (file: Blob) => boolean, createErrors: (errorFiles: Array<Blob>) => ValidationErrors): ValidatorFn\n{\n\treturn (control: AbstractControl): ValidationErrors => {\n\t\tif (!control.value) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst files: FileList = control.value;\n\t\tconst errors: Array<any> = [];\n\n\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\tif (validator(files[i])) {\n\t\t\t\terrors.push(files[i]);\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length) {\n\t\t\treturn createErrors(errors);\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\n"],"names":[],"mappings":"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"}
